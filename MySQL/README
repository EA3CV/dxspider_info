# DXSpider ‚Äì Support for Berkeley DB and MariaDB/MySQL Backends

This directory contains the necessary modules to enable DXSpider to use either the traditional Berkeley DB (`DB_File`) or a relational MariaDB/MySQL database as its user storage backend, depending on manual configuration.

## Purpose

To allow DXSpider to operate with either `DB_File` (the legacy system) or MariaDB/MySQL for storing user information, while maintaining full compatibility with the original interface (`get`, `put`, `del`, `close`, etc.).

It has also been extended to plain-text file systems such as those used in `badword`, `baddx`, etc.

## Included Files

- `DB_File.pm`  
  The original module based on `DB_File`, used by default in DXSpider.

- `DB_Mysql.pm`  
  An alternative module implementing an SQL backend for users, supporting the `users_new` table in a MariaDB/MySQL database.

- `DXUser.pm`  
  A patched version of the module adapted to work with the selected backend (Berkeley or MySQL), without altering system-wide logic.

- `DXHash.pm`  
  The original module based on `DXHash`, used by default in DXSpider.

- `DXHash_DB.pm`  
  An alternative module implementing an SQL backend for `baddx`, `badspotter` and `badnode`, supporting the `bads` table in a MariaDB/MySQL database.

- `BadWords.pm`  
  The original module based on `BadWords`, used by default in DXSpider.

- `BadWords_DB.pm`  
  An alternative module implementing an SQL backend for `badwords`, supporting the `badwords` table in a MariaDB/MySQL database.

- `DXVars.pm`  
  Updated to define new global variables required for MariaDB/MySQL operation.

- `update_new_sysop.pl`  
  A script that replaces the original `update_sysop.pl`. It is designed to initialise the `mycall` and `myalias` users with optional password and registration support, specifically for use with MySQL.

- `export_users_mysql.pl`  
  A script that replaces `export_users.pl`, used to back up the MySQL user database to `users_backup.sql` and a `user_json` file.

- `export_v3j_to_mysql.pl`  
  A migration script for transferring user records from the original Berkeley DB `users.v3j` to the new `users_new` table in MySQL.

- `export_bads_to_mysql.pl`  
  A migration script for transferring data from the original files `baddx`, `badspotter` and `badnode` to the new `bads` table in MySQL.

- `export_badwords_to_mysql.pl`  
  A migration script for transferring data from the original files `badword`, `badword.new` and `badw_regex` to the new `badwords` table in MySQL.

## Selecting the Backend

Backend selection is made **by directly editing the source code** where `tie %u, ...` is used ‚Äî replace `'DB_File'` with `'DB_Mysql'` as needed.

> ‚ö†Ô∏è There is no automatic logic to select the backend using a global variable. Selection is manual and explicit via `DXVars.pm`:
>
> $db_backend = 'mysql';  # 'dbfile' or 'mysql'
>

## Requirements for the MariaDB Backend

- A MariaDB database `dxspider` with the following tables created:
  - `users_new`
  - `bads`
  - `badwords`

- Connection variables must be defined in `DXVars.pm`:
  - `$main::mysql_db`
  - `$main::mysql_user`
  - `$main::mysql_pass`
  - `$main::mysql_host`
  - `$main::mysql_table`
  - `$main::mysql_bads`
  - `$main::mysql_badwords`

- Required Perl modules:
  - `DBI`
  - `DBD::mysql`
  - `JSON`
  - `Scalar::Util`
  - `Encode`

## Advantages of the MariaDB Backend

- Fast and flexible direct SQL queries.
- Shared access to a single user database across multiple DXSpider nodes.
- Improved maintainability, backups, and data migration.
- Full support for `utf8mb4` and special characters.

## Warning

There is no synchronisation between the Berkeley and MariaDB backends. Migration must be done manually using the provided export/import scripts.

## Procedure

1. Install MariaDB or MySQL. In my case, I‚Äôve installed MariaDB 11.

2. Update `DXVars.pm`.

3. Edit the export scripts to match the correct path of the files to migrate.  
   I use `/root/dxspider/node-2/local_data`, so adjust to your setup.  
   Credentials for database access are required.  
   Table names should not be modified.

4. Run the desired export scripts:
   - `export_users_mysql.pl`
   - `export_v3j_to_mysql.pl`
   - `export_badwords_to_mysql.pl`

5. Edit source and destination paths in each script as needed.

6. Patch and move the modules you plan to use into `/spider/local`.

7. Copy the new modules into `/spider/local`.

8. If everything is successful, restart the node.

## Additional Notes

The base version used for patching is **build 633**.

All related information, scripts, and updated files can be found at:  
üëâ https://github.com/EA3CV/dxspider_info/tree/main/MySQL

Please note this is an experimental project. It is currently running successfully on EA4URE-2, 3 and 5.

If you‚Äôre unfamiliar with Linux systems, it‚Äôs better to refrain from using this setup ‚Äî support for beginners is very limited due to time constraints.

Feedback on bugs and suggestions for improvement are welcome.

‚ö†Ô∏è This is **not intended to be a fork** of Dirk‚Äôs development. Every effort has been made to keep the patch as non-intrusive as possible. If there is enough interest, we could propose this as a potential integration to Dirk.

Enjoy.

Kin EA3CV
